# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import goods_store_pb2 as goods__store__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in goods_store_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DBServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Welcome = channel.unary_unary(
                '/goodsstore.DBService/Welcome',
                request_serializer=goods__store__pb2.Empty.SerializeToString,
                response_deserializer=goods__store__pb2.WelcomeResponse.FromString,
                _registered_method=True)
        self.GetProducts = channel.unary_unary(
                '/goodsstore.DBService/GetProducts',
                request_serializer=goods__store__pb2.Empty.SerializeToString,
                response_deserializer=goods__store__pb2.ProductListResponse.FromString,
                _registered_method=True)
        self.GetProductById = channel.unary_unary(
                '/goodsstore.DBService/GetProductById',
                request_serializer=goods__store__pb2.ProductId.SerializeToString,
                response_deserializer=goods__store__pb2.ProductResponse.FromString,
                _registered_method=True)
        self.CreateProduct = channel.unary_unary(
                '/goodsstore.DBService/CreateProduct',
                request_serializer=goods__store__pb2.CreateProductRequest.SerializeToString,
                response_deserializer=goods__store__pb2.ProductResponse.FromString,
                _registered_method=True)
        self.UpdateProduct = channel.unary_unary(
                '/goodsstore.DBService/UpdateProduct',
                request_serializer=goods__store__pb2.UpdateProductRequest.SerializeToString,
                response_deserializer=goods__store__pb2.ProductResponse.FromString,
                _registered_method=True)
        self.CreateUser = channel.unary_unary(
                '/goodsstore.DBService/CreateUser',
                request_serializer=goods__store__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=goods__store__pb2.UserInfo.FromString,
                _registered_method=True)
        self.Login = channel.unary_unary(
                '/goodsstore.DBService/Login',
                request_serializer=goods__store__pb2.LoginRequest.SerializeToString,
                response_deserializer=goods__store__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.UpdateUser = channel.unary_unary(
                '/goodsstore.DBService/UpdateUser',
                request_serializer=goods__store__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=goods__store__pb2.UserInfo.FromString,
                _registered_method=True)
        self.GetAllUsers = channel.unary_unary(
                '/goodsstore.DBService/GetAllUsers',
                request_serializer=goods__store__pb2.Empty.SerializeToString,
                response_deserializer=goods__store__pb2.UserResponseList.FromString,
                _registered_method=True)
        self.DeactivateUser = channel.unary_unary(
                '/goodsstore.DBService/DeactivateUser',
                request_serializer=goods__store__pb2.deactivateRequest.SerializeToString,
                response_deserializer=goods__store__pb2.Empty.FromString,
                _registered_method=True)
        self.GetUserById = channel.unary_unary(
                '/goodsstore.DBService/GetUserById',
                request_serializer=goods__store__pb2.UserId.SerializeToString,
                response_deserializer=goods__store__pb2.UserInfo.FromString,
                _registered_method=True)
        self.GetUserBySid = channel.unary_unary(
                '/goodsstore.DBService/GetUserBySid',
                request_serializer=goods__store__pb2.UserSid.SerializeToString,
                response_deserializer=goods__store__pb2.UserInfo.FromString,
                _registered_method=True)
        self.PlaceOrder = channel.unary_unary(
                '/goodsstore.DBService/PlaceOrder',
                request_serializer=goods__store__pb2.OrderRequest.SerializeToString,
                response_deserializer=goods__store__pb2.OrderResponse.FromString,
                _registered_method=True)


class DBServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Welcome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProducts(self, request, context):
        """for Products
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """for USERS
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """New RPC for login
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserBySid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlaceOrder(self, request, context):
        """for orders
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DBServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Welcome': grpc.unary_unary_rpc_method_handler(
                    servicer.Welcome,
                    request_deserializer=goods__store__pb2.Empty.FromString,
                    response_serializer=goods__store__pb2.WelcomeResponse.SerializeToString,
            ),
            'GetProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProducts,
                    request_deserializer=goods__store__pb2.Empty.FromString,
                    response_serializer=goods__store__pb2.ProductListResponse.SerializeToString,
            ),
            'GetProductById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductById,
                    request_deserializer=goods__store__pb2.ProductId.FromString,
                    response_serializer=goods__store__pb2.ProductResponse.SerializeToString,
            ),
            'CreateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProduct,
                    request_deserializer=goods__store__pb2.CreateProductRequest.FromString,
                    response_serializer=goods__store__pb2.ProductResponse.SerializeToString,
            ),
            'UpdateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProduct,
                    request_deserializer=goods__store__pb2.UpdateProductRequest.FromString,
                    response_serializer=goods__store__pb2.ProductResponse.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=goods__store__pb2.CreateUserRequest.FromString,
                    response_serializer=goods__store__pb2.UserInfo.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=goods__store__pb2.LoginRequest.FromString,
                    response_serializer=goods__store__pb2.LoginResponse.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=goods__store__pb2.UpdateUserRequest.FromString,
                    response_serializer=goods__store__pb2.UserInfo.SerializeToString,
            ),
            'GetAllUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllUsers,
                    request_deserializer=goods__store__pb2.Empty.FromString,
                    response_serializer=goods__store__pb2.UserResponseList.SerializeToString,
            ),
            'DeactivateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivateUser,
                    request_deserializer=goods__store__pb2.deactivateRequest.FromString,
                    response_serializer=goods__store__pb2.Empty.SerializeToString,
            ),
            'GetUserById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserById,
                    request_deserializer=goods__store__pb2.UserId.FromString,
                    response_serializer=goods__store__pb2.UserInfo.SerializeToString,
            ),
            'GetUserBySid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserBySid,
                    request_deserializer=goods__store__pb2.UserSid.FromString,
                    response_serializer=goods__store__pb2.UserInfo.SerializeToString,
            ),
            'PlaceOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.PlaceOrder,
                    request_deserializer=goods__store__pb2.OrderRequest.FromString,
                    response_serializer=goods__store__pb2.OrderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'goodsstore.DBService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('goodsstore.DBService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DBService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Welcome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/Welcome',
            goods__store__pb2.Empty.SerializeToString,
            goods__store__pb2.WelcomeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/GetProducts',
            goods__store__pb2.Empty.SerializeToString,
            goods__store__pb2.ProductListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProductById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/GetProductById',
            goods__store__pb2.ProductId.SerializeToString,
            goods__store__pb2.ProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/CreateProduct',
            goods__store__pb2.CreateProductRequest.SerializeToString,
            goods__store__pb2.ProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/UpdateProduct',
            goods__store__pb2.UpdateProductRequest.SerializeToString,
            goods__store__pb2.ProductResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/CreateUser',
            goods__store__pb2.CreateUserRequest.SerializeToString,
            goods__store__pb2.UserInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/Login',
            goods__store__pb2.LoginRequest.SerializeToString,
            goods__store__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/UpdateUser',
            goods__store__pb2.UpdateUserRequest.SerializeToString,
            goods__store__pb2.UserInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/GetAllUsers',
            goods__store__pb2.Empty.SerializeToString,
            goods__store__pb2.UserResponseList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeactivateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/DeactivateUser',
            goods__store__pb2.deactivateRequest.SerializeToString,
            goods__store__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/GetUserById',
            goods__store__pb2.UserId.SerializeToString,
            goods__store__pb2.UserInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserBySid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/GetUserBySid',
            goods__store__pb2.UserSid.SerializeToString,
            goods__store__pb2.UserInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PlaceOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/goodsstore.DBService/PlaceOrder',
            goods__store__pb2.OrderRequest.SerializeToString,
            goods__store__pb2.OrderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
