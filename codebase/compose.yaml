services:
  postgres:
    image: postgres:17
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "1111:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d


  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000


  kafka:
    # https://hub.docker.com/r/confluentinc/cp-kafka
    image: confluentinc/cp-kafka:7.7.1
    container_name: kafka
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-topic-creator:
    image: confluentinc/cp-kafka:7.7.1
    depends_on:
      - kafka
    entrypoint: >
      bash -c "
      /bin/kafka-topics --create --topic log-channel --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1;
      "

  api-service:
    image: api_service
    container_name: api-service
    environment:
      FLASK_ENV: development
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_RUN_PORT: 8081
    ports:
      - "8081:8081"
    depends_on:
      - postgres



  db-service:
    image: db_service
    container_name: db-service
    hostname: db-service
    environment:
      FLASK_APP: local_manager.py
      FLASK_ENV: test
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      FLASK_RUN_PORT: 50051
    ports:
      - "50051:50051"
    depends_on:
      - postgres

  logging-service:
    image: logging_service
    container_name: logging-service
    hostname: logging-service
    environment:
      FLASK_APP: local_publisher.py
      FLASK_ENV: test
      FLASK_RUN_PORT: 50052
    ports:
      - "50052:50052"
    depends_on:
      kafka:
        condition: service_healthy


volumes:
  pg_data:
